//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.13 at 03:27:41 PM IST 
//


package com.kraft.pim.step;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EntityType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EntityType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Name" type="{}NameType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="Entity" type="{}EntityType"/>
 *           &lt;element name="SuppressedProductCrossReference" type="{}SuppressedProductCrossReferenceType"/>
 *           &lt;element name="ProductCrossReference" type="{}ProductCrossReferenceType"/>
 *           &lt;element name="SuppressedClassificationCrossReference" type="{}SuppressedClassificationCrossReferenceType"/>
 *           &lt;element name="ClassificationCrossReference" type="{}ClassificationCrossReferenceType"/>
 *           &lt;element name="SuppressedEntityCrossReference" type="{}SuppressedEntityCrossReferenceType"/>
 *           &lt;element name="EntityCrossReference" type="{}EntityCrossReferenceType"/>
 *           &lt;element name="SuppressedAssetCrossReference" type="{}SuppressedAssetCrossReferenceType"/>
 *           &lt;element name="AssetCrossReference" type="{}AssetCrossReferenceType"/>
 *           &lt;element name="SuppressedContextCrossReference" type="{}SuppressedContextCrossReferenceType"/>
 *           &lt;element name="ContextCrossReference" type="{}ContextCrossReferenceType"/>
 *           &lt;element name="SuppressedWorkspaceCrossReference" type="{}SuppressedWorkspaceCrossReferenceType"/>
 *           &lt;element name="WorkspaceCrossReference" type="{}WorkspaceCrossReferenceType"/>
 *           &lt;element name="Values" type="{}ValuesType"/>
 *           &lt;element name="CurrentTasks" type="{}CurrentTasksType"/>
 *         &lt;/choice>
 *         &lt;element name="DeleteClassificationReference" type="{}DeleteClassificationReferenceType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="DeleteProductCrossReference" type="{}DeleteProductCrossReferenceType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="DeleteAssetCrossReference" type="{}DeleteAssetCrossReferenceType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Changed" type="{}TrueFalseType" default="false" />
 *       &lt;attribute name="SourcePos" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="AnalyzerResult" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ParentID" type="{}StepID" />
 *       &lt;attribute name="ID" type="{}StepID" />
 *       &lt;attribute name="QualifierID" type="{}StepID" />
 *       &lt;attribute name="Republished" type="{}TrueFalseType" default="false" />
 *       &lt;attribute name="OverridesProductID" type="{}StepID" />
 *       &lt;attribute name="UserTypeID" type="{}StepID" />
 *       &lt;attribute name="Selected" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="Referenced" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EntityType", propOrder = {
    "name",
    "entityOrSuppressedProductCrossReferenceOrProductCrossReference",
    "deleteClassificationReference",
    "deleteProductCrossReference",
    "deleteAssetCrossReference"
})
public class EntityType {

    @XmlElement(name = "Name")
    protected List<NameType> name;
    @XmlElements({
        @XmlElement(name = "CurrentTasks", type = CurrentTasksType.class),
        @XmlElement(name = "SuppressedClassificationCrossReference", type = SuppressedClassificationCrossReferenceType.class),
        @XmlElement(name = "SuppressedWorkspaceCrossReference", type = SuppressedWorkspaceCrossReferenceType.class),
        @XmlElement(name = "ContextCrossReference", type = ContextCrossReferenceType.class),
        @XmlElement(name = "ProductCrossReference", type = ProductCrossReferenceType.class),
        @XmlElement(name = "SuppressedEntityCrossReference", type = SuppressedEntityCrossReferenceType.class),
        @XmlElement(name = "ClassificationCrossReference", type = ClassificationCrossReferenceType.class),
        @XmlElement(name = "Entity", type = EntityType.class),
        @XmlElement(name = "AssetCrossReference", type = AssetCrossReferenceType.class),
        @XmlElement(name = "SuppressedContextCrossReference", type = SuppressedContextCrossReferenceType.class),
        @XmlElement(name = "EntityCrossReference", type = EntityCrossReferenceType.class),
        @XmlElement(name = "SuppressedProductCrossReference", type = SuppressedProductCrossReferenceType.class),
        @XmlElement(name = "SuppressedAssetCrossReference", type = SuppressedAssetCrossReferenceType.class),
        @XmlElement(name = "WorkspaceCrossReference", type = WorkspaceCrossReferenceType.class),
        @XmlElement(name = "Values", type = ValuesType.class)
    })
    protected List<Object> entityOrSuppressedProductCrossReferenceOrProductCrossReference;
    @XmlElement(name = "DeleteClassificationReference")
    protected List<DeleteClassificationReferenceType> deleteClassificationReference;
    @XmlElement(name = "DeleteProductCrossReference")
    protected List<DeleteProductCrossReferenceType> deleteProductCrossReference;
    @XmlElement(name = "DeleteAssetCrossReference")
    protected List<DeleteAssetCrossReferenceType> deleteAssetCrossReference;
    @XmlAttribute(name = "Changed")
    protected TrueFalseType changed;
    @XmlAttribute(name = "SourcePos")
    protected String sourcePos;
    @XmlAttribute(name = "AnalyzerResult")
    protected String analyzerResult;
    @XmlAttribute(name = "ParentID")
    protected String parentID;
    @XmlAttribute(name = "ID")
    protected String id;
    @XmlAttribute(name = "QualifierID")
    protected String qualifierID;
    @XmlAttribute(name = "Republished")
    protected TrueFalseType republished;
    @XmlAttribute(name = "OverridesProductID")
    protected String overridesProductID;
    @XmlAttribute(name = "UserTypeID")
    protected String userTypeID;
    @XmlAttribute(name = "Selected")
    protected Boolean selected;
    @XmlAttribute(name = "Referenced")
    protected Boolean referenced;

    /**
     * Gets the value of the name property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the name property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     * 
     * 
     */
    public List<NameType> getName() {
        if (name == null) {
            name = new ArrayList<NameType>();
        }
        return this.name;
    }

    /**
     * Gets the value of the entityOrSuppressedProductCrossReferenceOrProductCrossReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the entityOrSuppressedProductCrossReferenceOrProductCrossReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEntityOrSuppressedProductCrossReferenceOrProductCrossReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CurrentTasksType }
     * {@link SuppressedClassificationCrossReferenceType }
     * {@link SuppressedWorkspaceCrossReferenceType }
     * {@link ContextCrossReferenceType }
     * {@link ProductCrossReferenceType }
     * {@link SuppressedEntityCrossReferenceType }
     * {@link ClassificationCrossReferenceType }
     * {@link EntityType }
     * {@link AssetCrossReferenceType }
     * {@link SuppressedContextCrossReferenceType }
     * {@link EntityCrossReferenceType }
     * {@link SuppressedProductCrossReferenceType }
     * {@link SuppressedAssetCrossReferenceType }
     * {@link WorkspaceCrossReferenceType }
     * {@link ValuesType }
     * 
     * 
     */
    public List<Object> getEntityOrSuppressedProductCrossReferenceOrProductCrossReference() {
        if (entityOrSuppressedProductCrossReferenceOrProductCrossReference == null) {
            entityOrSuppressedProductCrossReferenceOrProductCrossReference = new ArrayList<Object>();
        }
        return this.entityOrSuppressedProductCrossReferenceOrProductCrossReference;
    }

    /**
     * Gets the value of the deleteClassificationReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the deleteClassificationReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDeleteClassificationReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DeleteClassificationReferenceType }
     * 
     * 
     */
    public List<DeleteClassificationReferenceType> getDeleteClassificationReference() {
        if (deleteClassificationReference == null) {
            deleteClassificationReference = new ArrayList<DeleteClassificationReferenceType>();
        }
        return this.deleteClassificationReference;
    }

    /**
     * Gets the value of the deleteProductCrossReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the deleteProductCrossReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDeleteProductCrossReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DeleteProductCrossReferenceType }
     * 
     * 
     */
    public List<DeleteProductCrossReferenceType> getDeleteProductCrossReference() {
        if (deleteProductCrossReference == null) {
            deleteProductCrossReference = new ArrayList<DeleteProductCrossReferenceType>();
        }
        return this.deleteProductCrossReference;
    }

    /**
     * Gets the value of the deleteAssetCrossReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the deleteAssetCrossReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDeleteAssetCrossReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DeleteAssetCrossReferenceType }
     * 
     * 
     */
    public List<DeleteAssetCrossReferenceType> getDeleteAssetCrossReference() {
        if (deleteAssetCrossReference == null) {
            deleteAssetCrossReference = new ArrayList<DeleteAssetCrossReferenceType>();
        }
        return this.deleteAssetCrossReference;
    }

    /**
     * Gets the value of the changed property.
     * 
     * @return
     *     possible object is
     *     {@link TrueFalseType }
     *     
     */
    public TrueFalseType getChanged() {
        if (changed == null) {
            return TrueFalseType.FALSE;
        } else {
            return changed;
        }
    }

    /**
     * Sets the value of the changed property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueFalseType }
     *     
     */
    public void setChanged(TrueFalseType value) {
        this.changed = value;
    }

    /**
     * Gets the value of the sourcePos property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSourcePos() {
        return sourcePos;
    }

    /**
     * Sets the value of the sourcePos property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSourcePos(String value) {
        this.sourcePos = value;
    }

    /**
     * Gets the value of the analyzerResult property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAnalyzerResult() {
        return analyzerResult;
    }

    /**
     * Sets the value of the analyzerResult property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAnalyzerResult(String value) {
        this.analyzerResult = value;
    }

    /**
     * Gets the value of the parentID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getParentID() {
        return parentID;
    }

    /**
     * Sets the value of the parentID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setParentID(String value) {
        this.parentID = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the qualifierID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getQualifierID() {
        return qualifierID;
    }

    /**
     * Sets the value of the qualifierID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQualifierID(String value) {
        this.qualifierID = value;
    }

    /**
     * Gets the value of the republished property.
     * 
     * @return
     *     possible object is
     *     {@link TrueFalseType }
     *     
     */
    public TrueFalseType getRepublished() {
        if (republished == null) {
            return TrueFalseType.FALSE;
        } else {
            return republished;
        }
    }

    /**
     * Sets the value of the republished property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueFalseType }
     *     
     */
    public void setRepublished(TrueFalseType value) {
        this.republished = value;
    }

    /**
     * Gets the value of the overridesProductID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOverridesProductID() {
        return overridesProductID;
    }

    /**
     * Sets the value of the overridesProductID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOverridesProductID(String value) {
        this.overridesProductID = value;
    }

    /**
     * Gets the value of the userTypeID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserTypeID() {
        return userTypeID;
    }

    /**
     * Sets the value of the userTypeID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserTypeID(String value) {
        this.userTypeID = value;
    }

    /**
     * Gets the value of the selected property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isSelected() {
        if (selected == null) {
            return true;
        } else {
            return selected;
        }
    }

    /**
     * Sets the value of the selected property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSelected(Boolean value) {
        this.selected = value;
    }

    /**
     * Gets the value of the referenced property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isReferenced() {
        if (referenced == null) {
            return false;
        } else {
            return referenced;
        }
    }

    /**
     * Sets the value of the referenced property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setReferenced(Boolean value) {
        this.referenced = value;
    }

}
